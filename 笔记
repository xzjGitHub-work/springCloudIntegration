1 SpringCloud五大组件：
    (1) Eureka注册中心
    (2) Zuul服务网关
    (3) Ribbon负载均衡
    (4) Feign服务调用
    (5) Hystix熔断器
2 ribbon是默认提供很多的负载均衡算法,轮询、随机。。也可以手动自定义负载均衡的算法
3 使用ribbon的负载均衡可以直接使用服务的serviceId名称访问主机
    当启用负载均衡的时候,`LoadBalancerInterceptor`类会堆RestTemplate的请求做拦截,从Eureka根据服务id获取服务列表,随后利用负载均衡算法获取到真实的地址
4 Hystrix会为每个依赖服务提供一个小线程池,如果线程池满了 或者请求超时 都会将请求直接拒绝
5 熔断器 当服务之间调用出错或者超时会被熔断器加速失败 提前做出相应


nacos:
    1 nacos主要有config service和Naming Service组成，Config service为Nacos配置中心核心模块，实现了配置的增删改查、版本管理、灰度管理、监听管理。
    2 当nacos配置文件发生变化时，需要让对应的服务动态感知到配置的变化，通过客户端监听来实现：
        服务端与客户端交互一般有两种方式：push pull
                push:需要建立服务端与客户端直接建立长时间的http链接,当客户端较多时会浪费内存来维持链接,还需要心跳来检测链接的有效性
                pull:客户端向服务端拉去服务,缺点时会出现很多不必要的拉去操作
                Nacos采用的是特殊的pull模式，通过客户端发起pull，并采用长轮询方式。具体来说，客户端采用长轮询的方式发起pull请求，检查配置是否发生变化；
         变化，客户端直接获取最新的配置文件，
         如果配置文件未发生变化，服务端会hold住这个请求，加入allSubs队列，等待配置文件发生变化或者维持长连接直到29.5s后，将结果返回给客户端。
    3

